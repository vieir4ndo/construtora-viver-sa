parameters:
  - name: 'solution_path'
    type: string

  - name: 'unit_tests_path'
    type: string
    default: '**/*.UnitTests.csproj'

steps:
  - task: gittools.gitversion-netcore-preview.gitversion-netcore-task.GitVersionNetCore@5
    displayName: 'GitVersion'
    enabled: false

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      feedsToUse: 'select'
      vstsFeed: 'fd2263e5-8864-4e3c-ae03-71336c20b9ed'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: '*.sln'
      arguments: '--configuration Release --no-restore'

  - task: DotNetCoreCLI@2
    displayName: 'Unit Tests'
    inputs:
      command: test
      projects: ${{ parameters.unit_tests_path}}
      publishTestResults: false
      arguments: '--no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude="[xunit*]*"  --configuration Release --logger trx --results-directory $(Agent.TempDirectory)'
      continueOnError: true

  - task: CopyFiles@2
    displayName: 'Save Unit tests results'
    inputs:
      SourceFolder: '$(Agent.TempDirectory)'
      TargetFolder: '$(Agent.BuildDirectory)/TestResults'
      OverWrite: true

  - task: PublishTestResults@2
    displayName: 'Publish Test Results *.trx'
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '*.trx'
      searchFolder: '$(Agent.BuildDirectory)/TestResults'
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: 'construtora-viver-sa-unit-tests'

  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: 'Generate Code Coverage Reports'
    inputs:
      reports: '$(Build.SourcesDirectory)/tests/**/coverage.opencover.xml'
      reporttypes: 'HtmlInline_AzurePipelines;Cobertura'
      targetdir: '$(Build.SourcesDirectory)/CodeCoverage'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
      reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens in **/*.yml'
    inputs:
      targetFiles: '**/*.yml'
      escapeType: none
      keepToken: true

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      arguments: '--configuration Release --output $(Build.StagingDirectory)/publish-artifacts --no-build'
      zipAfterPublish: false
      modifyOutputPath: false
      pathToPublish: $(build.artifactstagingdirectory)